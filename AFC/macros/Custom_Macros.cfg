[gcode_macro PATHFINDER_BURNIN]
gcode:
    {% for i in range( params.REPEAT|default(10)|int) %}
        RESPOND TYPE=echo MSG="Pass { i+1 } of { params.REPEAT|default(1)|int } on lane {params.LANE|default(1)|int}"
        BT_LANE_MOVE LANE={ params.LANE|default(1)|int } DISTANCE=105
        G4 P250
        BT_LANE_MOVE LANE={ params.LANE|default(1)|int } DISTANCE=-105
        G4 P250
    {% endfor %}
    
[gcode_macro goose_park]	
gcode:
    START_BELT
    AFC_PARK

[gcode_macro goose_cut]	
gcode:
    START_BELT
    AFC_CUT

[gcode_macro BELT_POOP]
gcode:
    # START_BELT
    GOOSE_PURGE {rawparams}
    # BELT_PURGE {rawparams}
    # AFC_BRUSH
    # M83 # relative extrusion
    # G1 E1 F1800
    # STOP_BELT    


[gcode_macro START_BELT]
variable_belt_pwm: 0.33 # speed at which should be belt driven (PWM du) Should be value between 0.0 and 1.0

gcode:
    UPDATE_DELAYED_GCODE ID=_goose_belt_timer DURATION=0
    SET_PIN PIN=goose_belt VALUE={belt_pwm}
    

[gcode_macro STOP_BELT]
variable_time_belt_stop: 35 # how long after purging routine ends should be belt stopped. Useful to cleanup all the remains on belt (in seconds)

gcode:
    {% if time_belt_stop <= 0 %}
		SET_PIN PIN=goose_belt VALUE=0
	{% else %}
		UPDATE_DELAYED_GCODE ID=_goose_belt_timer DURATION={time_belt_stop}
	{% endif %}


[gcode_macro BELT_PURGE]

description: Goose Belt Purger routine. Call with parameter VOLUME to set required purge volume (in mm^3)

# ========================================================================================
# ==================== PURGE TUNING ======================================================
# ========================================================================================

# The absolute minimum to purge, even if you don't changed tools. This is to prime the 
# nozzle before printing
variable_purge_length_minimum: 50

# The maximum amount of filament (in mmÂ¹) to purge in a single poop. POOPER will 
# automatically purge multiple poops if the purge amount exeeds this.
variable_purge_length_maximum: 125

# Default purge length to fall back on when neither the tool map purge_volumes or 
# parameter PURGE_LENGTH is set.
variable_purge_length: 100

# Positions:
	# where should toolhead go before reaching purge position? Should be safe spot which can be reached without collisions and from which purge position can be reached
variable_x_stage: 15
variable_y_stage: 309
	# where should toolhead go for actual purging
variable_x_purge: 40
variable_Y_purge: 309

# Feedrates:
	# what speed should be used to go to staging position before purge (mm/s)
variable_th_to_stage: 300
	# what speed should be used to go to purge position. Also used for return to stage after purge (mm/s)
variable_th_to_purge: 200
	# speed at which should be belt driven (PWM du) Should be value between 0.0 and 1.0
variable_belt_pwm: 0.33
	# feedrate for extrusion during purge (mm/s)
variable_extrusion_fr: 7
  # feedrate for retraction (mm/s)
variable_retraction_fr: 30
  # feedrate for de-retraction (mm/s)
variable_deretraction_fr: 30

# Extrusion parameters:
	# retraction length
variable_retraction: 2
    # retraction length
variable_deretraction: 2
    # dwell time between retraction and deretraction (in milliseconds)
variable_rtr_dwell: 500
    

# General behaviour:
	# True if purging shall start by movement to staging point. False if printhead shall go directly to purging position
	# Can be disabled if you are certain you will only ever call purging from already safe spot. This is often case with MMUs, for which you park first anyway to swap a filament
variable_start_with_stage: False
	# True if purging shall end by movement back to staging point. False if you want to skip staging and go directly to printing moves
	# Can usualy be disabled, which will save time and reduce oozing
variable_end_with_stage: False
	# how long after purging routine ends should be belt stopped. Useful to cleanup all the remains on belt (in seconds)
variable_time_belt_stop: 35

# Set the part cooling fan speed. Disabling can help prevent the nozzle from cooling down 
# and stimulate flow, Enabling it can prevent poops from sticking together. Values range 
# from 0 .. 1, or -1 if you don't want it changed.
# variable_part_cooling_fan: -1              # Leave it unchanged
# variable_part_cooling_fan:  0                # Disable the fan
# variable_part_cooling_fan:  1              # Run it at full speed
variable_part_cooling_fan:  0.25  

### DO NOT EDIT BEYOND THIS POINT ###

# ===Code=== 
gcode:
  # ======================================================================================
  # ==================== RECORD STATE (INCL. FANS, SPEEDS, ETC...) =======================
  # ======================================================================================

  # General state
  SAVE_GCODE_STATE NAME=POOPER_state
  # Part cooling fan
  
  {% if part_cooling_fan >= 0 %}
    # Save the part cooling fan speed to be enabled again later
    {% set backup_fan_speed = printer.fan.speed %}
    # Set part cooling fan speed
    M106 S{part_cooling_fan * 255}
  {% endif %}

  # Set feedrate to 100% for correct speed purging
  {% set backup_feedrate = printer.gcode_move.speed_factor %}
  M220 S100

  # ====================================================================================
  # ==================== POSITIONING ===================================================
  # ====================================================================================

  # Set to absolute positioning.
  G90

  # go to staging
  {% if start_with_stage == True %}
    G1 X{x_stage} Y{y_stage} F{th_to_stage*60}
  {% endif %}

  #go to purge position
  G1 X{x_purge} Y{y_purge} F{th_to_purge*60}

  # ======================================================================================
  # ==================== START BELT ======================================================
  # ======================================================================================

  SET_PIN PIN=goose_belt VALUE={belt_pwm}

  # ======================================================================================
  # ==================== DETERMINE PURGE LENGTH ==========================================
  # ======================================================================================

  {% if params.PURGE_LENGTH %} # =============== PARAM PURGE LENGTH ======================
    {action_respond_info("POOPER: param PURGE_LENGTH provided")}
    {% set purge_len = params.PURGE_LENGTH|float %}
  {% else %} # ========================= USE CONFIG DEFAULT LENGTH =============================
    {action_respond_info("POOPER: No PURGE_LENGTH. Using default")}
    {% set purge_len = purge_length|float %}
  {% endif %}
  
  # # ==================================== APPLY PURGE MINIMUM =============================
  {% set purge_len = [purge_len,purge_length_minimum]|max|round(0, 'ceil')|int %}
  {action_respond_info("POOPER: Purging %dmm of filament" % (purge_len))}

  # ====================================================================================
  # ==================== START ITERATING ===============================================
  # ====================================================================================
  
  # Calculate total number of iterations based on the purge length and the max_iteration 
  # length.
  {% set poops = (purge_len / purge_length_maximum)|round(0, 'ceil')|int %}
  {% set purge_per_poop = purge_len|float / poops %}
  
  # Repeat the process until purge_len is reached
  {% for poop in range(poops) %}
    RESPOND MSG={"'POOPER: Poop %d of %d (%.1fmm)'" % (poop + 1, poops, purge_per_poop)}

    SET_PIN PIN=goose_belt VALUE={belt_pwm}
    
    # relative positioning
    G91 
    # relative extrusion
    M83
    
    # Purge segment
    G1 E{purge_per_poop} F{extrusion_fr*60}
    {% if (poop + 1) < poops %}
      SET_PIN PIN=goose_belt VALUE=1 # set belt to full speed to create separation during dwell
      # Retract
      G1 E{(-retraction)} F{retraction_fr*60}
      # Wait for purge separation
      G4 P{rtr_dwell}
      # Unretract
      G1 E{deretraction} F{deretraction_fr*60}
    {% endif %}
    
  {% endfor %}
  # G1 E{(-0.5)} F{retraction_fr*60}
  G1 E{(-retraction)} F{retraction_fr*60}
  # SET_PIN PIN=goose_belt VALUE=1 # set belt to clear purge, commented out to allow purges to cool/firm up before falling off. Testing this still.

  # ======================================================================================
  # ==================== STOP BELT =======================================================
  # ======================================================================================

  #call delayed macro to stop the belt or stop it right away if requested time is 0
  {% if time_belt_stop <= 0 %}
      SET_PIN PIN=goose_belt VALUE=0
  {% else %}
      UPDATE_DELAYED_GCODE ID=_goose_belt_timer DURATION={time_belt_stop}
  {% endif %}
  

  # ======================================================================================
  # ==================== RESTORE STATE ===================================================
  # ======================================================================================
  
  # go back to staging
  {% if end_with_stage == True %}
      G1 X{x_stage} Y{y_stage} F{th_to_purge*60}
  {% endif %}
  
  # Reset part cooling fan if it was changed
  {% if part_cooling_fan >= 0 %}
    M106 S{(backup_fan_speed * 255)|int}
  {% endif %}
  
  # Restore feedrate
  M220 S{(backup_feedrate * 100)|int}
  
  RESTORE_GCODE_STATE NAME=POOPER_state 
