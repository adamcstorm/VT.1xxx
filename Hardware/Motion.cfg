#####################################################################
#   Motion Configuration
#####################################################################

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 10000
max_z_velocity: 20 #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 80.4
shaper_type_x: ei
damping_ratio_x: 0.048
shaper_freq_y: 51.4
shaper_type_y: ei
damping_ratio_y: 0.052

[resonance_tester]
accel_chip: adxl345
min_freq: 5
max_freq: 133
accel_per_hz: 75
hz_per_sec: 1 
probe_points:
    175, 175, 20

# [auto_speed]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#####################################################################
#   X/Y Stepper Settings
#####################################################################

## Sensorless Homing
## This file contains configuration and macros pertaining to sensorless homing for the Voron 0.2 
## It is based on this guide: https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
# endstop_pin: PC1
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
position_endstop: 297
position_max: 297
homing_speed: 50   #Max 100
homing_retract_dist: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
diag0_pin: ^!PG1
interpolate: True
# driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
run_current: 0.8
home_current: 0.52
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
# endstop_pin: PC2
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
position_endstop: 310
position_max: 310
homing_speed: 50  #Max 100
homing_retract_dist: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
diag0_pin: ^!PE10
interpolate: True
# driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
run_current: 0.8
home_current: 0.52
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD7
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32
# endstop_pin: PC3
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: 1.420
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: PC8
enable_pin: !PC10
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:150,150
# speed:100
# z_hop:15

[homing_override]
axes: xyz
set_position_z: 0
gcode:

  G90
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    G0 Z10
    # Move away
    SET_KINEMATIC_POSITION X=15
	G91
	G1 X-10 F1200
    G28 X
  {% endif %}

  {% if home_all or 'Y' in params %}
    G0 Z10
    # Move away
    SET_KINEMATIC_POSITION Y=15
	G91
	G1 Y-10 F1200
    G28 Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    ATTACH_PROBE
    MOVE_AVOIDING_DOCK X=150 Y=150 SPEED=300
    # Probe is already attached, no need to make a return trip to the dock.
    G28 Z  
  {% endif %}

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

z_positions:
  -50, 18
  150, 348
  350, 18
points:
  30, 5
  150, 245
  270, 5

speed: 200
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0075