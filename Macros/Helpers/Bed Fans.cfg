############### Toggle Filter ##################
[gcode_macro TOGGLE_BED_FANS]
gcode:
    {% if printer['fan_generic bed_fan'].speed > 0 %}
      SET_FAN_SPEED FAN=bed_fan SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=bed_fan SPEED=0.65
    {% endif %}



############### Config options ##################

[gcode_macro _BEDFANVARS]
variable_threshold: 80	# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 0.8		# Fan speed once bed temp is reached  
variable_slow: 0.2  	# Fan speed while bed is heating
gcode:

########## Aliases #########

[gcode_macro BEDFANSSLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _BEDFANVARS"].slow|float %}
	
    SET_FAN_SPEED FAN=bed_fan SPEED={SLOW}

[gcode_macro BEDFANSFAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _BEDFANVARS"].fast|float %}
	
    SET_FAN_SPEED FAN=bed_fan SPEED={FAST}

[gcode_macro BEDFANSOFF]
gcode:
    SET_FAN_SPEED FAN=bed_fan SPEED=0
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BEDFANSOFF
	_TURN_OFF_HEATERS
	
################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BEDFANVARS"].threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BEDFANSFAST															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}